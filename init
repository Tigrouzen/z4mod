#!/sbin/busybox.init sh
#
# z4mod init wrapper, by Elia Yehuda (c) 2010 GPLv2
#
# Loops over partitions to find ext2/3/4 and replace mount command in rc.conf.
# It extracts info from the ext2/3/4 structure to check for type of ext.
#
# added various tweaks from http://forum.xda-developers.com/showthread.php?t=813309
#

# some aliasses to make the code more readable
alias mount="busybox.init mount"
alias dd="busybox.init dd"
alias sed="busybox.init sed"
alias od="busybox.init od"
alias mknod="busybox.init mknod"

set -x
(
# we must have proc mounted
mount -t proc none /proc
mount -t sysfs none /sys

# tweaks by 'hardcore' : http://forum.xda-developers.com/showthread.php?t=813309
# Tweak cfq io scheduler
for i in /sys/block/stl* /sys/block/mmc* /sys/block/bml* /sys/block/tfsr*; do
	echo "0" > $i/queue/rotational
	echo "1" > $i/queue/iosched/low_latency
	echo "1" > $i/queue/iosched/back_seek_penalty
	echo "1000000000" > $i/queue/iosched/back_seek_max
	echo "3" > $i/queue/iosched/slice_idle
done

# Tweak kernel VM management
echo "0" > /proc/sys/vm/swappiness
echo "10" > /proc/sys/vm/dirty_ratio
echo "1000" > /proc/sys/vm/vfs_cache_pressure
echo "4096" > /proc/sys/vm/min_free_kbytes

# Tweak kernel scheduler
echo "4000000" > /proc/sys/kernel/sched_latency_ns
echo "1000000" > /proc/sys/kernel/sched_wakeup_granularity_ns
echo "800000" > /proc/sys/kernel/sched_min_granularity_ns

# Miscellaneous tweaks
setprop dalvik.vm.startheapsize 8m
setprop wifi.supplicant_scan_interval 90

# device nodes are always nice to have
# TODO: keep only fs partitions
mknod /dev/null c 1 3
mknod /dev/zero c 1 5
#mknod /dev/block/mmcblk0 b 179 0
mknod /dev/block/mmcblk0p1 b 179 1
mknod /dev/block/mmcblk0p2 b 179 2
#mknod /dev/block/mmcblk1 b 179 8
mknod /dev/block/stl1 b 138 1
mknod /dev/block/stl2 b 138 2
mknod /dev/block/stl3 b 138 3
mknod /dev/block/stl4 b 138 4
mknod /dev/block/stl5 b 138 5
mknod /dev/block/stl6 b 138 6
mknod /dev/block/stl7 b 138 7
mknod /dev/block/stl8 b 138 8
mknod /dev/block/stl9 b 138 9
mknod /dev/block/stl10 b 138 10
mknod /dev/block/stl11 b 138 11
mknod /dev/block/stl12 b 138 12

# if you need to load moudles for your fs, this is the time and place

# setting the variables once
RO_COMPAT=0x464
INCOMPAT=0x460
COMPAT=0x45c
MAGIC=0x438
EXT3_FEATURE_COMPAT_HAS_JOURNAL=4
EXT4_FEATURE_RO_COMPAT_HUGE_FILE=8
EXT4_FEATURE_RO_COMPAT_GDT_CSUM=16
EXT4_FEATURE_RO_COMPAT_DIR_NLINK=32
EXT4_FEATURE_RO_COMPAT_EXTRA_ISIZE=64
EXT4_FEATURE_INCOMPAT_64BIT=128
EXT4_FEATURE_INCOMPAT_MMP=256

EXT2_MOUNT_OPTIONS="nosuid nodev noatime nodiratime errors=continue"
EXT3_MOUNT_OPTIONS="nosuid nodev noatime nodiratime errors=continue"
EXT4_MOUNT_OPTIONS="nosuid nodev noatime nodiratime errors=continue"

# loop on known partitions, and extract information
for part in /dev/block/stl* /dev/block/mmcblk0p*; do
#for part in /dev/block/stl* /dev/block/mmcblk0p*; do
	# check if this is an ext2/3/4
	magic="`dd if=$part skip=$((MAGIC)) bs=1 count=2 2>/dev/null | od -x | sed -e 's/\S* \(\S*\) .*/\1/'`"
	if [ "${magic}" == "ef53" ]; then 
		FOUND_NON_RFS="true"
		# has journal?
		compat=0x"`dd if=$part skip=$((COMPAT)) bs=1 count=4 2>/dev/null | od -X | sed -e 's/\S* \(\S*\) .*/\1/'`"
		if [ "$((compat&=EXT3_FEATURE_COMPAT_HAS_JOURNAL))" == "0" ]; then
			# ext2
			sed -i 's|mount rfs '"${part}"' \([^ ]*\) .*|mount ext2 '"${part}"' \1 '"${EXT2_MOUNT_OPTIONS}"'|g' /*.rc
		else
			# ext3 or ext4
			ro_compat=0x"`dd if=$part skip=$((RO_COMPAT)) bs=1 count=4 2>/dev/null | od -X | sed -e 's/\S* \(\S*\) .*/\1/'`"
			incompat=0x"`dd if=$part skip=$((INCOMPAT)) bs=1 count=4 2>/dev/null | od -X | sed -e 's/\S* \(\S*\) .*/\1/'`"
			if [ "$((ro_compat&=EXT4_FEATURE_RO_COMPAT_HUGE_FILE))" != "0" -o \
				"$((ro_compat&=EXT4_FEATURE_RO_COMPAT_GDT_CSUM))" != "0" -o \
				"$((ro_compat&=EXT4_FEATURE_RO_COMPAT_DIR_NLINK))" != "0" -o \
				"$((ro_compat&=EXT4_FEATURE_RO_COMPAT_EXTRA_ISIZE))" != "0" -o \
				"$((incompat&=EXT4_FEATURE_INCOMPAT_64BIT))" != "0" -o \
				"$((incompat&=EXT4_FEATURE_INCOMPAT_MMP))" != "0" ]; then
				# ext4
				sed -i 's|mount rfs '"${part}"' \([^ ]*\) .*|mount ext4 '"${part}"' \1 '"${EXT4_MOUNT_OPTIONS}"'|g' /*.rc
			else
				# ext3
				sed -i 's|mount rfs '"${part}"' \([^ ]*\) .*|mount ext3 '"${part}"' \1 '"${EXT3_MOUNT_OPTIONS}"'|g' /*.rc
			fi
		fi
	fi
done

# patching original init binary
if [ "${FOUND_NON_RFS}" == "true" ]; then
	# patch init to ignore non-RFS (and not format it)
	sed -i 's/mmcblk0\x00/\x00mcblk0\x00/g;s/mmcblk0p2\x00/\x00mcblk0p2\x00/g' /sbin/init
fi
# allow a secondary wrapper to be executed
[ -x /z4mod ] && exec /z4mod
# better to run init with original name 'init' to prevent problems (ie, killall init...)
#busybox.init mv /init.org /init
exec /sbin/init

) >> /z4mod.init.log 2>&1
